// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel heightToCart

StructuredBuffer<int> inHeights;
RWStructuredBuffer<float3> outPoints;
float4 bounds; // slat, slon, elat, elon
float scale;
int boundX;
int boundY;

[numthreads(128,1,1)]
void heightToCart (uint3 id : SV_DispatchThreadID) {
    if ((int) id.x >= boundX * boundY) {return;}

    // make a 2d coord
    float x = id.x % boundX;
    float y = (id.x - x) / (float) boundY;
    float px = x / (float) boundY;
    float py = y / (float) boundX;

    // get geographic
    float2 geo = float2(bounds.x + py * (bounds.z - bounds.x), bounds.y + px * (bounds.w - bounds.y));
    // convert to radians
    float2 radians = float2(geo.x * (3.14159 / 180.0), geo.y * (3.14159 / 180.0));
    float h = inHeights[id.x];

    float3 p = float3(
        // -32.767 due to 32767 offset in divider.py
        (1737.4 - 32.767 + h / 1000.0) * cos(radians.x) * cos(radians.y) / scale,
        (1737.4 - 32.767 + h / 1000.0) * cos(radians.x) * sin(radians.y) / scale,
        (1737.4 - 32.767 + h / 1000.0) * sin(radians.x) / scale
    );

    outPoints[id.x] = p;
}
